{"version":3,"file":"history-plugin.min.js","sources":["../src/action.js","../src/actions/connection.js","../src/actions/node.js","../src/history.js","../src/index.js"],"sourcesContent":["export default class Action {\n    undo() {}\n\n    redo() {}\n}\n","import Action from '../action';\n\n// The saved connection may have been removed and recreated, so make sure we are working with the correct reference\nfunction findNewConnection(oldConnection) {\n    const { input, output } = oldConnection;\n\n    return output.connections.find(c => c.input === input);\n}\n\nclass ConnectionActionHelper {\n    constructor(editor, connection) {\n        this.editor = editor;\n        this.connection = connection;\n    }\n\n    add() {\n        this.editor.connect(this.connection.output, this.connection.input);\n    }\n\n    remove() {\n        this.editor.removeConnection(findNewConnection(this.connection));\n    }\n}\n\nexport class AddConnectionAction extends Action {\n    constructor(editor, connection) {\n        super();\n        this.helper = new ConnectionActionHelper(editor, connection);\n    }\n\n    undo() { this.helper.remove(); }\n\n    redo() { this.helper.add(); }\n}\n\nexport class RemoveConnectionAction extends Action {\n    constructor(editor, connection) {\n        super();\n        this.helper = new ConnectionActionHelper(editor, connection);\n    }\n\n    undo() { this.helper.add(); }\n\n    redo() { this.helper.remove(); }\n}\n","import Action from '../action';\n\nclass NodeAction extends Action {\n    constructor(editor, node) {\n        super();\n        this.editor = editor;\n        this.node = node;\n    }\n}\n\nexport class AddNodeAction extends NodeAction {\n    undo() {\n        this.editor.removeNode(this.node);\n    }\n\n    redo() {\n        this.editor.addNode(this.node);\n    }\n}\n\nexport class RemoveNodeAction extends NodeAction {\n    undo() {\n        this.editor.addNode(this.node);\n    }\n\n    redo() {\n        this.editor.removeNode(this.node);\n    }\n}\n\nexport class DragNodeAction extends NodeAction {\n    constructor(editor, node, prev) {\n        super(editor, node);\n\n        this.prev = [...prev];\n        this.new = [...node.position];\n    }\n\n    _translate(position) {\n        this.editor.view.nodes.get(this.node).translate(...position);\n    }\n    \n    undo() {\n        this._translate(this.prev);\n    }\n\n    redo() {\n        this._translate(this.new);\n    }\n\n    update(node) {\n        this.new = [...node.position];\n    }\n}\n","export default class History {\n    constructor() {\n        this.active = false;\n        this.produced = [];\n        this.reserved = [];\n    }\n\n    add(action) {\n        if (this.active) return;\n        this.produced.push(action);\n        this.reserved = [];\n    }\n\n    get last() {\n        return this.produced[this.produced.length - 1];\n    }\n\n    _do(from, to, type) {\n        const action = from.pop();\n\n        if (!action) return;\n\n        this.active = true;\n        action[type]();\n        to.push(action);\n        this.active = false;\n    }\n\n    undo() {\n        this._do(this.produced, this.reserved, 'undo');\n    }\n\n    clear() {\n        this.active = false;\n        this.produced = [];\n        this.reserved = [];\n    }\n\n    redo() {\n        this._do(this.reserved, this.produced, 'redo');\n    }\n}\n","import { AddConnectionAction, RemoveConnectionAction } from './actions/connection';\nimport { AddNodeAction, DragNodeAction, RemoveNodeAction } from './actions/node';\nimport Act from './action';\nimport History from './history';\n\nfunction trackNodes(editor, history) {\n    editor.on('nodecreated', node => history.add(new AddNodeAction(editor, node)));\n    editor.on('noderemoved', node => history.add(new RemoveNodeAction(editor, node)));\n    editor.on('nodetranslated', ({ node, prev }) => {\n        if (history.last instanceof DragNodeAction && history.last.node === node)\n            history.last.update(node);\n        else\n            history.add(new DragNodeAction(editor, node, prev));\n    });\n}\n\nfunction trackConnections(editor, history) {\n    editor.on('connectioncreated', c => history.add(new AddConnectionAction(editor, c)));\n    editor.on('connectionremoved', c => history.add(new RemoveConnectionAction(editor, c)));\n}\n\n// eslint-disable-next-line max-statements\nfunction install(editor, { keyboard = true }) {\n    editor.bind('undo');\n    editor.bind('redo');\n    editor.bind('addhistory');\n\n    const history = new History();\n\n    editor.on('undo', () => history.undo());\n    editor.on('redo', () => history.redo());\n    editor.on('addhistory', action => history.add(action));\n    editor.on('clear', () => {\n        history.clear();\n    });\n    if (keyboard) document.addEventListener('keydown', e => {\n        if (!e.ctrlKey) return;\n\n        switch (e.code) {\n        case 'KeyZ': editor.trigger('undo'); break;\n        case 'KeyY': editor.trigger('redo'); break;\n        default:\n        }\n    });\n\n    trackNodes(editor, history);\n    trackConnections(editor, history);\n}\n\nexport const Action = Act;\n\nexport default {\n    name: 'history',\n    install\n}\n"],"names":["Action","ConnectionActionHelper","editor","connection","connect","this","output","input","oldConnection","removeConnection","connections","find","c","AddConnectionAction","helper","remove","add","RemoveConnectionAction","NodeAction","node","AddNodeAction","removeNode","addNode","RemoveNodeAction","DragNodeAction","prev","position","view","nodes","get","translate","_translate","History","active","produced","reserved","action","push","length","from","to","type","pop","_do","name","install","keyboard","bind","history","on","undo","redo","clear","document","addEventListener","e","ctrlKey","code","trigger","last","update","Act"],"mappings":";;;;;whRAAqBA,kEACjB,gCAEA,yBCMEC,wBACUC,EAAQC,kBACXD,OAASA,OACTC,WAAaA,+BAGtB,gBACSD,OAAOE,QAAQC,KAAKF,WAAWG,OAAQD,KAAKF,WAAWI,6BAGhE,WAhBJ,IAA2BC,EACfD,OAgBCL,OAAOO,kBAjBOD,EAiB4BH,KAAKF,WAhBhDI,EAAkBC,EAAlBD,MAAkBC,EAAXF,OAEDI,YAAYC,KAAK,SAAAC,UAAKA,EAAEL,QAAUA,eAkBvCM,iBAA4Bb,yBACzBE,EAAQC,2CAEXW,OAAS,IAAIb,EAAuBC,EAAQC,mCAGrD,gBAAcW,OAAOC,6BAErB,gBAAcD,OAAOE,eAGZC,iBAA+BjB,yBAC5BE,EAAQC,2CAEXW,OAAS,IAAIb,EAAuBC,EAAQC,mCAGrD,gBAAcW,OAAOE,0BAErB,gBAAcF,OAAOC,kBCzCnBG,iBAAmBlB,yBACTE,EAAQiB,2CAEXjB,OAASA,IACTiB,KAAOA,gBAIPC,iBAAsBF,kGAC/B,gBACShB,OAAOmB,WAAWhB,KAAKc,0BAGhC,gBACSjB,OAAOoB,QAAQjB,KAAKc,eAIpBI,iBAAyBL,kGAClC,gBACShB,OAAOoB,QAAQjB,KAAKc,0BAG7B,gBACSjB,OAAOmB,WAAWhB,KAAKc,eAIvBK,iBAAuBN,yBACpBhB,EAAQiB,EAAMM,mCAChBvB,EAAQiB,IAETM,OAAWA,WACDN,EAAKO,gDAGxB,SAAWA,iBACFxB,OAAOyB,KAAKC,MAAMC,IAAIxB,KAAKc,OAAMW,oBAAaJ,wBAGvD,gBACSK,WAAW1B,KAAKoB,0BAGzB,gBACSM,WAAW1B,gCAGpB,SAAOc,cACYA,EAAKO,mBCnDPM,yCAERC,QAAS,OACTC,SAAW,QACXC,SAAW,gCAGpB,SAAIC,GACI/B,KAAK4B,cACJC,SAASG,KAAKD,QACdD,SAAW,sBAGpB,kBACW9B,KAAK6B,SAAS7B,KAAK6B,SAASI,OAAS,sBAGhD,SAAIC,EAAMC,EAAIC,GACJL,EAASG,EAAKG,MAEfN,SAEAH,QAAS,EACdG,EAAOK,KACPD,EAAGH,KAAKD,QACHH,QAAS,uBAGlB,gBACSU,IAAItC,KAAK6B,SAAU7B,KAAK8B,SAAU,6BAG3C,gBACSF,QAAS,OACTC,SAAW,QACXC,SAAW,uBAGpB,gBACSQ,IAAItC,KAAK8B,SAAU9B,KAAK6B,SAAU,uBCYhC,CACXU,KAAM,UACNC,QA/BJ,SAAiB3C,KAAU4C,gBAAAA,aACvB5C,EAAO6C,KAAK,QACZ7C,EAAO6C,KAAK,QACZ7C,EAAO6C,KAAK,kBApBI7C,EAAQ8C,EAWF9C,EAAQ8C,EAWxBA,EAAU,IAAIhB,EAEpB9B,EAAO+C,GAAG,OAAQ,kBAAMD,EAAQE,SAChChD,EAAO+C,GAAG,OAAQ,kBAAMD,EAAQG,SAChCjD,EAAO+C,GAAG,aAAc,SAAAb,UAAUY,EAAQhC,IAAIoB,KAC9ClC,EAAO+C,GAAG,QAAS,WACfD,EAAQI,UAERN,GAAUO,SAASC,iBAAiB,UAAW,SAAAC,MAC1CA,EAAEC,eAECD,EAAEE,UACL,OAAQvD,EAAOwD,QAAQ,kBACvB,OAAQxD,EAAOwD,QAAQ,WAnCRV,EAwCLA,GAxCH9C,EAwCLA,GAvCJ+C,GAAG,cAAe,SAAA9B,UAAQ6B,EAAQhC,IAAI,IAAII,EAAclB,EAAQiB,MACvEjB,EAAO+C,GAAG,cAAe,SAAA9B,UAAQ6B,EAAQhC,IAAI,IAAIO,EAAiBrB,EAAQiB,MAC1EjB,EAAO+C,GAAG,iBAAkB,gBAAG9B,IAAAA,KAAMM,IAAAA,KAC7BuB,EAAQW,gBAAgBnC,GAAkBwB,EAAQW,KAAKxC,OAASA,EAChE6B,EAAQW,KAAKC,OAAOzC,GAEpB6B,EAAQhC,IAAI,IAAIQ,EAAetB,EAAQiB,EAAMM,MAIvBuB,EA8BLA,GA9BH9C,EA8BLA,GA7BV+C,GAAG,oBAAqB,SAAArC,UAAKoC,EAAQhC,IAAI,IAAIH,EAAoBX,EAAQU,MAChFV,EAAO+C,GAAG,oBAAqB,SAAArC,UAAKoC,EAAQhC,IAAI,IAAIC,EAAuBf,EAAQU,iBA+BjEiD"}